<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>CASE_APP_RecordPicker</name>
        <uuid>883b3172-4929-4171-98ef-34f0407545bf</uuid>
        <description>Use this record picker to allow a user to select a record in a SAIL page using a custom picker component</description>
        <parentUuid>_a-0000d9f1-8353-8000-9ba2-011c48011c48_10351</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>/*&#xD;To Test, load these base test values:&#xD;  record: (Point to a Constant of Record Type)&#xD;  primaryKeyField:  (If blank, defaults to &quot;id&quot; - if using a Process Backed Record, primaryKeyField must point to a process variable of Integer type)&#xD;  searchFields: (The name of the fields you want to search)&#xD;&#xD;*/&#xD;  with(&#xD;    local!primaryKeyField: if (isnull(ri!primaryKeyField), &quot;id&quot;, ri!primaryKeyField),&#xD;    local!labelField: if (isnull(ri!labelField), ri!searchFields[1], ri!labelField),&#xD;    #&quot;SYSTEM_SYSRULES_pickerFieldCustom&quot;(&#xD;      label: ri!label,&#xD;      labelPosition: ri!labelPosition,&#xD;      instructions: ri!instructions,&#xD;      required: ri!required,&#xD;      requiredMessage: ri!requiredMessage,&#xD;      readOnly: ri!readOnly,&#xD;      disabled: ri!disabled,&#xD;      maxSelections: ri!maxSelections,&#xD;      validations: ri!validations,&#xD;      validationGroup: ri!validationGroup,&#xD;      suggestFunction: #&quot;_a-0000d9b9-6309-8000-9ba2-011c48011c48_1458&quot;(&#xD;        record: ri!record,&#xD;        primaryKeyField: local!primaryKeyField,&#xD;        searchFields: ri!searchFields,&#xD;        labelField: local!labelField,&#xD;        searchTerm: _,&#xD;        existingIds: if (ri!requireUniqueValues, #&quot;_a-0000d9b9-6309-8000-9ba2-011c48011c48_1456&quot;( array: ri!selectedValues, index: local!primaryKeyField, default: {0} ), null)&#xD;      ),&#xD;      value: #&quot;_a-0000d9b9-6309-8000-9ba2-011c48011c48_1456&quot;( array: ri!selectedValues, index: tostring(local!primaryKeyField) ),&#xD;      selectedLabels: #&quot;_a-0000d9b9-6309-8000-9ba2-011c48011c48_1456&quot;( array: ri!selectedValues, index: local!labelField ),&#xD;      saveInto: {&#xD;        ri!saveInto,&#xD;        a!save(&#xD;          ri!selectedValues, &#xD;          { /* This bracket is to force an array result */&#xD;            if (or(isnull(save!value), count(save!value) &lt; 1), &#xD;              {},&#xD;              if (and(count(save!value) = 1, not(isnull(save!value[1])), tointeger(save!value[1]) &gt; 0),&#xD;                #&quot;_a-0000d9b9-6309-8000-9ba2-011c48011c48_1457&quot;(&#xD;                  record: ri!record,&#xD;                  primaryKeyField: local!primaryKeyField,&#xD;                  primaryKeyValue: save!value[1]&#xD;                ),&#xD;                apply(&#xD;                  #&quot;_a-0000d9b9-6309-8000-9ba2-011c48011c48_1457&quot;(&#xD;                    record: ri!record,&#xD;                    primaryKeyField: local!primaryKeyField,&#xD;                    primaryKeyValue: _&#xD;                  ),&#xD;                  save!value&#xD;                )&#xD;              )&#xD;            )&#xD;          }&#xD;        )&#xD;      }&#xD;    )&#xD;  )&#xD;</definition>
        <namedTypedValue>
            <name>label</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>labelPosition</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>instructions</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>required</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>requiredMessage</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>readOnly</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>disabled</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>maxSelections</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>validations</name>
            <type>
                <name>Text?list</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>validationGroup</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>record</name>
            <type>
                <name>RecordType</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>primaryKeyField</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>searchFields</name>
            <type>
                <name>Text?list</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>labelField</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>requireUniqueValues</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>selectedValues</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>saveInto</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>interface</preferredEditor>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users>
                <userUuid>malcolm.ross@appian.com</userUuid>
            </users>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
