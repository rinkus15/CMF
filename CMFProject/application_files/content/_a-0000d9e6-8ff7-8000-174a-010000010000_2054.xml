<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>CASE_APP_CommentRow</name>
        <uuid>_a-0000d9e6-8ff7-8000-174a-010000010000_2054</uuid>
        <description>Used to generate a new row of comments for a tempo post</description>
        <parentUuid>_a-0000d9e6-8ff7-8000-174a-010000010000_2071</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>=#&quot;SYSTEM_SYSRULES_gridRowLayout&quot;(
  contents: {
    #&quot;SYSTEM_SYSRULES_checkboxField&quot;(
      label: &quot;is Hazard&quot;,
      choiceLabels: {null},
      choiceValues: {true},
      value: ri!items[ri!index].isHazard,
      saveInto: ri!items[ri!index].isHazard,
      disabled: ri!disabled
    ),
    #&quot;SYSTEM_SYSRULES_pickerFieldUsers&quot;(
      label: &quot;Post As&quot;,
      maxSelections: 1,
      value: ri!items[ri!index].User,
      saveInto: ri!items[ri!index].User,
      required: if(ri!items[ri!index].isHazard, false(), true()),
      disabled: if(ri!disabled, true(), if(ri!items[ri!index].isHazard, true(), false()))
    ),
    #&quot;SYSTEM_SYSRULES_textField&quot;(
      label: &quot;Message&quot;,
      value: ri!items[ri!index].Message,
      saveInto: ri!items[ri!index].Message,
      required: true(),
      disabled: ri!disabled
    ),
    #&quot;SYSTEM_SYSRULES_integerField&quot;(
      label: &quot;Minutes Delay&quot;,
      value: ri!items[ri!index].PostDelay,
      saveInto: ri!items[ri!index].PostDelay,
      required: true(),
      disabled: ri!disabled
    ),
    #&quot;SYSTEM_SYSRULES_linkField&quot;(
      label: &quot;delete &quot; &amp; ri!index,
      links: #&quot;SYSTEM_SYSRULES_dynamicLink&quot;(
        label: char(10005),
        value: ri!index,
        saveInto: {
          a!save(ri!items, remove(ri!items, save!value)),
          /* When modifying the size of the array used in a!applyComponents, /
          / make the same change in the &quot;token&quot; array variable               */
          a!save(ri!itemsToken, remove(ri!itemsToken, save!value))
        },
      align: &quot;CENTER&quot;
      )
    )
  },
  id: ri!index
)</definition>
        <namedTypedValue>
            <name>items</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>index</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>itemsToken</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>PostTime</name>
            <type>
                <name>dateTime</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>disabled</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>interface</preferredEditor>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users>
                <userUuid>Administrator</userUuid>
            </users>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
